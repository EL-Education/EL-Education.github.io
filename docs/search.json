[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Style Guide with Associated R Code",
    "section": "",
    "text": "This site is designed to describe the branding guidelines that the Research Team at EL Education follows, as well as provide ways in which R can be used to construct visualizations and reports.\nThroughout, code blocks will be interspersed that show how basic datasets provided with the tidyverse can be used to construct graphs that follow EL’s Style Guide.\n\n\nCode in R\nlibrary(tidyverse)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html#introduction",
    "href": "index.html#introduction",
    "title": "Style Guide with Associated R Code",
    "section": "",
    "text": "This site is designed to describe the branding guidelines that the Research Team at EL Education follows, as well as provide ways in which R can be used to construct visualizations and reports.\nThroughout, code blocks will be interspersed that show how basic datasets provided with the tidyverse can be used to construct graphs that follow EL’s Style Guide.\n\n\nCode in R\nlibrary(tidyverse)"
  },
  {
    "objectID": "index.html#loading-the-font-for-text",
    "href": "index.html#loading-the-font-for-text",
    "title": "Data Visualization Guidelines and Use in R",
    "section": "Loading the font for text",
    "text": "Loading the font for text\nIf you wish to write something longer and wish to use Garamond, this can be easily done by adding it to the mainfont part of the heading at the top of a Quarto document, where you list the format.\nformat:\n  pdf:\n    mainfont: Garamond"
  },
  {
    "objectID": "index.html#loading-fonts-for-charts-and-visualizations",
    "href": "index.html#loading-fonts-for-charts-and-visualizations",
    "title": "Data Visualization Guidelines and Use in R",
    "section": "Loading fonts for charts and visualizations",
    "text": "Loading fonts for charts and visualizations"
  },
  {
    "objectID": "index.html#our-primary-and-secondary-colors",
    "href": "index.html#our-primary-and-secondary-colors",
    "title": "Style Guide with Associated R Code",
    "section": "Our primary and secondary colors",
    "text": "Our primary and secondary colors\nCrimson represents EL, and should be saved only for elements of a graph that are specific to our partners (e.g., in comparison EL Credentialed schools to their district and state). It should not be used, for instance, in describing a group of students, as that passes a value statement that certain students may be more “EL” than others."
  },
  {
    "objectID": "index.html#making-decisions-on-palette",
    "href": "index.html#making-decisions-on-palette",
    "title": "Style Guide with Associated R Code",
    "section": "Making decisions on palette",
    "text": "Making decisions on palette\n\nThere are three fundamental use cases for color in data visualizations: (i) we can use color to distinguish groups of data from each other; (ii) we can use color to represent data values; and (iii) we can use color to highlight. The types of colors we use and the way in which we use them are quite different for these three cases.\n– Claus Wilke, Fundamentals of Data Visualization\n\nWhile we are free to use the EL palette for cases (i) and (iii) as appropriate, (ii) is trickier because our choice of color should match the type of data that we are representing. As such, we can use the EL palette as a base, using certain packages within R, to create other palettes that more appropriately represent the data we are visualizing.\n\nShowing range with a Sequential Palette\nSequential palettes are used when visualizing continuous or ordinal values that go from low to high (or high to low). For example, if we wanted to create a barplot of the number of students scoring from 100-150, 150-200, and 200-250 on a reading assessment.\nIn these cases, use Dark Navy, Orange, and Sky Blue, as end points, starting each time with Gray.\nOne can use colorRampPalette from the RColorBrewer library to create a discrete palette using these end points, and then use scale_*_manual to color the graph if it is discrete. If it is a continuous variable, one can just use scale_*_gradient (where * is fill or color) to color the graphs. Two examples below, with code.\n\n\nCode in R\nlibrary(RColorBrewer)\n\nELsequentialpalette &lt;- colorRampPalette(colors = c(\"#c7c7c7\", \"#211651\"))(5)\n\ndiamonds |&gt; \n  ggplot(mapping=aes(x=carat, fill=cut)) +\n  geom_histogram(position=\"stack\") +\n  theme_bw() +\n  scale_fill_manual(values=ELsequentialpalette) +\n  theme(text=element_text(family=\"Poppins\"))\n\n\n\n\n\n\n\n\nFigure 3: A discrete sequential palette using Gray and Dark Navy\n\n\n\n\n\n\n\nCode in R\ndiamonds |&gt; \n  ggplot(mapping=aes(x=carat,y=depth,color=price)) +\n  geom_point() +\n  theme_bw() +\n  scale_color_gradient(low=\"#c7c7c7\", high=\"#ffa409\") +\n  theme(text=element_text(family=\"Poppins\"))\n\n\n\n\n\n\n\n\nFigure 4: A continuous sequential palette using Gray and Orange\n\n\n\n\n\n\n\nShowing divergence from a central value with a Divergent Palette\nDiverging palettes are used when you are focused on visualizing data with an emphasis on looking for patterns outward from a critical midpoint of the range (often 0, but in ordinal data this could be reading at grade level, for instance).\nIn these cases, construct a palette from Orange to Dark Navy, going through Gray.\nNote that you still use colorRampPalette for discrete data, but now use scale_color_gradient2, which allows you to set a middle color as well as a midpoint. An example of a discrete and continuous divergent dataset are below.\n\n\nCode in R\nELdivergentpalette &lt;- colorRampPalette(colors = c(\"#ffa409\",\"#c7c7c7\", \"#211651\"))(5)\n\ndiamonds |&gt; \n  ggplot(mapping=aes(x=carat, fill=cut)) +\n  geom_histogram(position=\"stack\") +\n  theme_bw() +\n  scale_fill_manual(values=ELdivergentpalette) +\n  theme(text=element_text(family=\"Poppins\"))\n\n\n\n\n\n\n\n\nFigure 5: Assuming Very Good is a central value in diamonds, one could reorient the earlier figure as a divergent visualization\n\n\n\n\n\n\n\nCode in R\n## This constructs a new dataset that shows the price of diamonds on average in comparison to the overall average\ndiamonds2 &lt;- diamonds |&gt; \n  mutate(middle=mean(price)) |&gt; \n  group_by(cut,color,middle) |&gt; \n  summarise(price=mean(price)) |&gt; \n  mutate(price=price-middle)\n\ndiamonds2 |&gt; \n  ggplot(mapping=aes(x=color,y=price, fill=price)) +\n  facet_grid(~cut) +\n  geom_col() +\n  theme_bw() +\n  scale_fill_gradient2(low= \"#ffa409\", mid=\"#c7c7c7\", high=\"#211651\", midpoint=0) +\n  theme(text=element_text(family=\"Poppins\"))\n\n\n\n\n\n\n\n\nFigure 6: A divergent color scheme showing the comparison of price of types and color of diamond to a central mean\n\n\n\n\n\n\n\nShowing categories with a Qualitative Palette\nIn situations where one needs a palette for categorical or nominal data that is unordered, it is appropriate to use the EL palette outlined above in Figure 2\nTwo things to keep in mind:\n\nCrimson is reserved for qualitative palettes where EL represents one category only (for instance, a graph that is comparing EL schools to schools within the district)\nColor blindness is not a small issue. Fortunately, the colorblindr package can convert any graph constructed in ggplot2 into a set of graphs as it would be viewed by people with different forms of color blindness.\n\n\n\nCode in R\nELcolors &lt;- palette_plot(palette) + ggtitle(\"EL Palette\") +\n  theme(text=element_text(family=\"Poppins\"))\nELcolorscvd &lt;- cvd_grid(palette_plot(palette, color_labels=FALSE)) + theme(text=element_text(family=\"Poppins\"))\n\nplot_grid(ELcolors,ELcolorscvd,ncol=1)\n\n\n\n\n\n\n\n\nFigure 7: The colorblindr package allows you to take any plot and look at it through common forms of color blindness\n\n\n\n\n\nDeutanomaly and Protanomaly are the most common forms of color blindness, so it is useful for external plots to just check. In the graph below, notice that many of the EL colors look similar when plotted through common forms of color blindness.\n\n\nCode in R\ncolorblindpalette &lt;- c(\"#d1e28f\",\"#f3e5b1\",\"#ee5a46\",\"#60ad66\",\"#ffa409\")\n\ngraph1 &lt;- diamonds |&gt; \n  ggplot(mapping=aes(x=cut, fill=cut)) +\n  geom_bar() +\n  scale_fill_manual(values=colorblindpalette) +\n  theme_bw() +\n  theme(text=element_text(family=\"Poppins\"))\n\ngraph2 &lt;- cvd_grid(graph1)\n\nplot_grid(graph1,graph2,ncol=1)\n\n\n\n\n\n\n\n\n\nInstead of setting our palettes, we understand that we will pull colors as necessary. If the number of categories exceeds one that we can easily graph with our palette, it is also useful to pull palettes from the viridis or RColorBrewer packages."
  },
  {
    "objectID": "index.html#typography-for-longer-form-text",
    "href": "index.html#typography-for-longer-form-text",
    "title": "Style Guide with Associated R Code",
    "section": "Typography for Longer Form Text",
    "text": "Typography for Longer Form Text\nIf you wish to write something longer and wish to use Garamond, this can be easily done by adding it to the mainfont part of the heading at the top of a Quarto document, where you list the format (example below).\nformat:\n  pdf:\n    mainfont: Garamond"
  },
  {
    "objectID": "index.html#typography-for-charts-and-visualizations",
    "href": "index.html#typography-for-charts-and-visualizations",
    "title": "Style Guide with Associated R Code",
    "section": "Typography for charts and visualizations",
    "text": "Typography for charts and visualizations\nFor charts, and tables, it is easy to add and then call the Poppins font using the showtext library, which was designed for this purpose.\nWhenever you wish to construct visualizations in line with EL’s brand guide (especially if sharing externally), you must first run the following piece of code. This will call the showtext package, ask it to load the Poppins font, and then prepare the font to be applied to any visualization you construct.\n\n\nCode in R\nlibrary(showtext)\nfont_add_google(\"Poppins\")\nshowtext_auto()\n\n\nOnce you have done that, it is as easy as changing the font in the theme part of a plot, as you would for any other element.\n\n\nCode in R\nlibrary(cowplot)\ncowplot::set_null_device(\"agg\")\n\ngraph1 &lt;- diamonds |&gt; \n  ggplot(mapping=aes(x=cut)) +\n  geom_bar() +\n  theme_bw() +\n  labs(title=\"A Regular Graph\")\n\ngraph2 &lt;- diamonds |&gt; \n  ggplot(mapping=aes(x=cut)) +\n  geom_bar() +\n  theme_bw() +\n  labs(title=\"A Regular Graph in Poppins\") +\n  theme(text=element_text(family=\"Poppins\"))\n\nplot_grid(graph1, graph2)\n\n\n\n\n\n\n\n\nFigure 1: Loading the Poppins font"
  }
]